#include<stdlib.h>
#include<stdio.h>
#include<string.h>
struct bank 
{
  char name[100];
   float money;
 };
void add () 
{
  FILE * fp = fopen ("bank.dat", "a+");
  struct bank rec;
  if (fp == NULL)
    printf ("not found\n");
  else
    {
      printf ("enter name\n");
      scanf ("%s", rec.name);
      printf ("enter money\n");
      scanf ("%f", &rec.money);
      fwrite (&rec, sizeof (struct bank), 1, fp);
      fclose (fp);
    } 
};
void remov () 
{
  FILE * fp1 = fopen ("bank.dat", "r+");
  FILE * temp1 = fopen ("temp.dat", "w+");
  struct bank rec;
  char name[100];
  printf ("enter name of the person u want to delete");
  scanf ("%s", name);
  while (!feof (fp1))
    {
      fread (&rec, sizeof (struct bank), 1, fp1);
      if (strcmp (name, rec.name))
	fwrite (&rec, sizeof (struct bank), 1, temp1);
    } 
fclose (fp1);
  fclose (temp1);
  FILE * fp2 = fopen ("bank.dat", "w+");
  FILE * temp2 = fopen ("temp.dat", "r+");
  while (!feof (temp2))
    {
      fread (&rec, sizeof (struct bank), 1, temp2);
      fwrite (&rec, sizeof (struct bank), 1, fp2);
    } 
fclose (fp2);
  fclose (temp2);
};
void update () 
{
 FILE * fp1 = fopen("bank.dat", "a+");
  FILE * temp1 = fopen("temp.dat", "w+");
  struct bank rec;
  struct bank new;
  char name[100];
  printf ("enter name u want to edit\n");
  scanf ("%s", name);
  while (!feof (fp1))
     {
      fread (&rec, sizeof (struct bank), 1, fp1);
      if (strcmp (name, rec. name))
	{
	  fwrite (&rec, sizeof (struct bank), 1, temp1);
	}
      else
      {
	  printf ("enter new name\n");
	  scanf ("%s", new.name);
	  printf ("enter money\n");
	  scanf ("%f", &new.money);
	  fwrite (&new, sizeof (struct bank), 1, temp1);
    } 
} 
fclose (fp1);
  fclose (temp1);
  FILE * fp2 = fopen ("bank.dat", "w+");
  FILE * temp2 = fopen ("temp.dat", "r+");
  while (!feof (temp2))
    {
      fread (&rec, sizeof (struct bank), 1, temp2);
      fwrite (&rec, sizeof (struct bank), 1, fp2);
    } 
fclose (fp2);
  fclose (temp2);
};
void view () 
{
  struct bank rec;
  FILE * fp = fopen("bank.dat", "a+");
  while (!feof (fp))
    {
      fread (&rec, sizeof (struct bank), 1, fp);
      printf ("name: %s\n", rec.name);
      printf ("money: %f\n", rec.money);
    } 
fclose (fp);
};
void withdraw () 
{
FILE * fp1 = fopen("bank.dat", "a+");
  FILE * temp1 = fopen("temp.dat", "w+");
  struct bank rec;
  char name[100];
  printf ("enter name \n");
  scanf ("%s", name);
  while (!feof (fp1))
    {
      fread (&rec, sizeof (struct bank), 1, fp1);
      if (strcmp (name, rec. name))
	{
	  fwrite (&rec, sizeof (struct bank), 1, temp1);
	}
      else
	{
	    float amount;
	    printf ("enter amount\n");
	  scanf ("%f", &amount);
rec.money-=amount;
	  fwrite (&rec, sizeof (struct bank), 1, temp1);
    } 
} 
fclose (fp1);
  fclose (temp1);
  FILE * fp2 = fopen ("bank.dat", "w+");
  FILE * temp2 = fopen ("temp.dat", "r+");
  while (!feof (temp2))
    {
      fread (&rec, sizeof (struct bank), 1, temp2);
      fwrite (&rec, sizeof (struct bank), 1, fp2);
    } 
fclose (fp2);
  fclose (temp2);
};
void deposit()
{
     FILE * fp1 = fopen("bank.dat", "a+");
  FILE * temp1 = fopen("temp.dat", "w+");
  struct bank rec;
  char name[100];
  printf ("enter name \n");
  scanf ("%s", name);
  while (!feof (fp1))
    {
      fread (&rec, sizeof (struct bank), 1, fp1);
      if (strcmp (name, rec. name))
	{
	  fwrite (&rec, sizeof (struct bank), 1, temp1);
	}
      else
	{
	   float amount;
	   printf ("enter amount\n");
	  scanf ("%f", &amount);
rec.money+=amount;
	  fwrite (&rec, sizeof (struct bank), 1, temp1);
    } 
} 
fclose (fp1);
  fclose (temp1);
  FILE * fp2 = fopen ("bank.dat", "w+");
  FILE * temp2 = fopen ("temp.dat", "r+");
  while (!feof (temp2))
    {
      fread (&rec, sizeof (struct bank), 1, temp2);
      fwrite (&rec, sizeof (struct bank), 1, fp2);
    } 
fclose (fp2);
  fclose (temp2);
};
void main () 
{
  int no;
  do
    {
      printf ("enter 1 to add records\n");
      printf ("enter 2 to remove records\n");
      printf ("enter 3 to update records\n");
      printf ("enter 4 to view records\n");
      printf ("enter 5 to withdraw\n");
      printf ("enter 6 to deposit\n");
      printf ("enter 7 to exit\n");
      scanf ("%d", &no);
      switch (no)
	{
	case 1:add ();
	  break;
	case 2:remov ();
	  break;
	case 3:update ();
	  break;
	case 4:view ();
	  break;
	case 5:withdraw ();
	  break;
	case 6:deposit ();
	  break;
	case 7:exit (0);
	  break;
	default:printf ("wrong entry");
	}
    }while (no != 7);
}
